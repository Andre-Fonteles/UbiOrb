{# file_widget.html.twig #}
{% extends 'form_div_layout.html.twig' %}

{% block file_widget %}
    {% spaceless %}
    <div style="visibility:hidden;position:absolute;absolute;top:-50;left:-50">
		{%- set type = type|default('text') -%}
    	<input type="{{ type }}" accept=".png,.jpg,.jpeg" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
    	
    </div>
    <input id="img_changed" type="hidden" name="img_changed" value="0"/>
    </div>
	    <div class="img-preview img-preview-empty" id="{{ id }}_preview">
		</div>
		<div>
			<button id="{{ id }}_x" type="button" class="btn btn-default btn-xs disable" disabled="disabled" aria-label="Left Align">
			  <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> {% trans %}form.label.removeImage{% endtrans %}
			</button>
		<div>
	</div>
	<script>
		var idPreview = "{{ id }}_preview";
		var idImg = "{{ id }}_img";
		var idX = "{{ id }}_x";
		var idInputFile = "{{ id }}";

        var emptyCssClass = "img-preview-empty";
        var errorCssClass = "img-preview-error";
        var showingCssClass = "img-preview-showing";

        var imgCenteredCssClass = "img-centered";
        
        
		var innerLabel = '<p class>{% trans %}form.label.selectImage{% endtrans %}</p>';
		var innerLabelError = '<p class>{% trans %}form.label.selectImage{% endtrans %}<br>' + 
			'<span>{{ 'invalid.fileWidget' | trans({}, 'validators') | raw }}<span></p>';
			
			
			
		$(document).ready(function() {
			// Reproduce click on inputFile when clicking on the preview div
			$('#'+idPreview).click(clickInputFile);

			$('#'+idX).click(function() {
				showSelectImg();
			    $('#img_changed').val("1");
			});
			
			// Capture event when something changes on the inputFile
			$('#'+idInputFile).change(function() {
			    readAndPreviewSelectedImg(this);
			    $('#img_changed').val("1");
			});

			showSelectImg();
		});	

		function showInvalidImg() {
            $('#'+idPreview).html(innerLabelError);
            $('#'+idX).prop('disabled', true);
            $('#'+idPreview).removeClass(showingCssClass + " " + emptyCssClass);
            $('#'+idPreview).addClass(errorCssClass);
		}

		function showSelectImg() {
            $('#'+idPreview).html(innerLabel);
            $('#'+idX).prop('disabled', true);
            $('#'+idPreview).removeClass(showingCssClass + " " + errorCssClass);
            $('#'+idPreview).addClass(emptyCssClass);
			$('#'+idInputFile).val("");
		}

		function showSelectedImg(src) {
			$('#'+idPreview).html('<img class="'+imgCenteredCssClass+'" id="'+idImg+'" src="'+src+'"/>');
            $('#'+idX).prop('disabled', false);
            $('#'+idPreview).removeClass(emptyCssClass + " " + errorCssClass);
            $('#'+idPreview).addClass(showingCssClass);
		}
		
		function clickInputFile() {
			$('#'+idInputFile).click();
		}	

		function readAndPreviewSelectedImg(input) {
			if (input.files && input.files[0]) {
				// this file is not an image.
				if (!input.files[0].type.match(/image\/((png)|(jpg)|(jpeg))/) ||
						input.files[0].size > 7*1000*1000) {
			    	showInvalidImg();
				} else {
		            var reader = new FileReader();
		            reader.onload = function (e) {
		            	showSelectedImg(e.target.result);
		            }
		            reader.readAsDataURL(input.files[0]);
			    }
	        } 			
		}
	</script>
	
    {% endspaceless %}
{% endblock %}